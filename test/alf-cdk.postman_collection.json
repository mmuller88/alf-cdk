{
	"info": {
		"_postman_id": "5fea7acf-0688-4778-9223-6d9c2539e7e6",
		"name": "alf-cdk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "instances-conf",
			"item": [
				{
					"name": "1 /instances-conf 400 {\"invalid\":\"Body\"}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0349af37-9fe5-4512-af27-8a2aeaf127d3",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"invalid\" : \"Body\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /instances-conf 400 Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cca1ac8-deb7-4650-b63b-220025f48357",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf 400 alfType = -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c689639-8354-4f7e-9e8c-21d755ea9aa9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 /instances-conf 400 alfType = 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57345514-5fd1-4d5a-bcc3-9f0500700c85",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": 1001\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 POST /instances-conf 400 invalid ec2InstanceType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "754d367d-89c7-43a7-a0d8-48a83dda08b4",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"-t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 POST /instances-conf 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e0fa915-cdbb-4e41-a3ae-74fd9fb2ab3b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.5 /instances-conf/:id 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86b2d540-a8b6-4086-9b28-70e8c78e4a9b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.6 POST /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8761071c-85e3-4bfb-80d9-9adbcf24711d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"notice\": \"Bobbicar\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa70de92-e0a7-4d0f-a2e0-6636980fa3cf",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c886316d-2fe2-45e2-9cf3-7a877dd1ea4a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\",\n\t\t\"zahlTag\" : 9912\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8 /instances-conf",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79c9db76-5df6-4a15-bcf2-c06a69f29433",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4de8efff-153d-4c9f-9bb8-4979f4b55d92",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 GET /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f6b13cd-baae-46ae-8ea0-9fb35c7a40ad",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.test(\"tag name created\", function () {",
									"    pm.expect(data[0].tags.notice).to.eql(\"Bobbicar\");",
									"});",
									"",
									"pm.test(\"tag notice created\", function () {",
									"    pm.expect(data[0].tags.name).to.eql(\"No Name\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b74c3899-d430-4e62-86a4-444dc01e7361",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=bald",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "bald"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "15 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1769f219-7cdb-427f-b46b-dc827ade24b9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "31fabed3-80b0-448c-b65a-015a4be63a67",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "16 GET /instances-conf serId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12210b59-48cf-4530-850b-8f82335027af",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ed2eeec7-895a-4d00-80d7-0abc038aa3e4",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?serId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "serId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17 /instances-conf length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff4e28ab-2a5d-4c0d-b16e-5b56c0bf3798",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17.5 /instances-conf length=3 userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8885aa91-6a4a-4dcc-8f75-5d973a0e5b38",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						},
						"description": "bald is not allowed as maxInstances is set to 3!"
					},
					"response": []
				},
				{
					"name": "18 /instances length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1de99de2-4409-40ec-8b5a-b8211986b35e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c925c203-f6ca-46fa-bd32-1d92b672ead1",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances without sleep",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdb71954-4324-4506-93c8-0643198e2651",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "210d3ae7-b897-4bf8-8e22-0a9b1dbd0bb5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20 /instances userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13601bfd-2108-4a5f-b1b8-6187a57c8e37",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"url\", data[0].url);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "60a4017e-bca8-4058-8b18-eda50dd9a839",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "21 GET /instances-conf/:id 400 missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d58f558-cb5c-4eea-b0a5-5d98bee8b83b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22 /instances-conf/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "922a4180-020b-4196-a0ea-656fd68bec69",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22.3 /instances-conf/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11d663e4-21ca-4dea-b6ad-507ba5328a81",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId=not-exist-12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "not-exist-12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf/:id missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5793d4c3-22b0-4507-a62e-ce35b47525c5",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alfType\": 2,\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c75ed725-4278-4a42-b582-2ce87ab0f47e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.1 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bed0ce4-115c-4072-88ba-cf464cf9feb8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.2 /instances-conf/:id 404 user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4319ddc1-b244-4205-b419-3a187e27e699",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.3 PUT /instances-conf/:id 404 instance id does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92bf68df-a435-479f-b8d9-52d7e525594c",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.5 /instances length=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c140f14c-33aa-493f-9d18-2604e1f1a861",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 instances now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "95e31410-2ce8-4ecc-a6af-23c66a378420",
								"exec": [
									"setTimeout(function(){}, [55000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21d2719d-0f1d-478f-bc56-727b8ffb4673",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1422abf0-6346-4275-b286-5964d7ecaf6a",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a565b4c-343c-480e-9125-8fea9390ea3d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eb9bd7c9-bb84-45aa-ab6a-8f661aad3b4b",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "28 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "649cbcee-a7fb-405d-9777-c32e46163f20",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"stopped\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "29 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5524b61-71c6-418b-bd43-adb7770366fe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "517cfa50-69e0-4d86-a465-24f35fa75653",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30 /instances/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f630480e-1a27-4e85-a941-cc6d07d0a5db",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be stopped\", function () {",
									"    pm.expect(data.status).to.eql(\"stopped\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c59f9e23-9370-4fa9-bd7d-8ebdc027caca",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.2 /instances/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "def3bad7-5b18-4c25-be50-fe99938041f2",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1abc3140-0aa7-4c7e-8145-1ac55801b4e9",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/not-exist-id-2223",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"not-exist-id-2223"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.5 /instances-conf/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ca8fb19-3485-494e-8ba5-d90c182e31b6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"running\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.6 GET after PUT /instances-conf/:id  status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9524bbe3-1818-4a13-b262-1ab0e01f3004",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be running\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"running\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "23384b16-1597-46a8-86b3-c9f5edce1901",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.7 /instances/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d69af0e-2f02-4148-864e-6d190fecca9d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be running\", function () {",
									"    pm.expect(data.status).to.eql(\"running\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9d1c7396-0faa-44c2-944a-61623a331b47",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "31 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40a15193-2511-4405-b281-cdcc53fe44ba",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "32 GET /instances-conf length=1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e9a953c-df0c-4024-9ea4-9503e7eecb3b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f10fa888-0f2e-429c-b924-66f37483bd53",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "33 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f22f1881-783a-4be7-b7f5-d90171f29a2d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "34 GET /instances-conf length=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c8575e8-40f9-4a50-8697-d80345871ee0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 0 item now\", function () {",
									"    pm.expect(data.length).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "493fa9ba-5fd1-426f-8c05-ad70bf3f50bf",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ee530b06-3efb-4c90-9391-5672c572df0f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a3a1519a-775f-4b56-bcb4-a4c2e4731e1b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ddf11a30-b0b1-4f02-9966-8e30d506b949",
			"key": "baseUrl",
			"value": "https://55kcii4ot7.execute-api.eu-west-2.amazonaws.com/prod"
		}
	],
	"protocolProfileBehavior": {}
}