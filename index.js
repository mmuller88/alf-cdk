"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@aws-cdk/core");
const logs = require("@aws-cdk/aws-logs");
const AlfCdkRestApi_1 = require("./AlfCdkRestApi");
const AlfCdkTables_1 = require("./lib/AlfCdkTables");
const AlfCdkLambdas_1 = require("./lib/AlfCdkLambdas");
const AlfCdkStepFunctions_1 = require("./lib/AlfCdkStepFunctions");
class AlfInstancesStack extends core_1.Stack {
    constructor(app, id, props) {
        super(app, id, props);
        const lambdas = new AlfCdkLambdas_1.AlfCdkLambdas(this, props);
        new AlfCdkTables_1.AlfCdkTables(this, lambdas);
        new AlfCdkRestApi_1.AlfCdkRestApi(this, lambdas, props);
        const stepFunctions = new AlfCdkStepFunctions_1.AlfCdkStepFunctions(this, lambdas);
        lambdas.createOneApi.addEnvironment('STATE_MACHINE_ARN', stepFunctions.createStateMachine.stateMachineArn);
        lambdas.updateOneApi.addEnvironment('STATE_MACHINE_ARN', stepFunctions.updateStateMachine.stateMachineArn);
        // Configure log group for short retention
        const logGroup = new logs.LogGroup(this, 'LogGroup', {
            retention: logs.RetentionDays.ONE_DAY,
            removalPolicy: core_1.RemovalPolicy.DESTROY,
            logGroupName: '/aws/lambda/custom/' + this.stackName
        });
        const lgstream = logGroup.addStream('myloggroupStream');
        new core_1.CfnOutput(this, 'LogGroupName', {
            value: logGroup.logGroupName
        });
        new core_1.CfnOutput(this, 'LogGroupStreamName', {
            value: lgstream.logStreamName
        });
    }
}
exports.AlfInstancesStack = AlfInstancesStack;
const app = new core_1.App();
new AlfInstancesStack(app, "AlfInstancesStackEuWest2Prod", {
    environment: 'prod',
    env: {
        region: "eu-west-2",
        account: '981237193288'
    },
    // disable create ec2 instance
    // createInstances: {
    //   imageId: 'ami-04d5cc9b88f9d1d39'
    // },
    cognito: {
        userPoolArn: 'arn:aws:cognito-idp:eu-west-2:981237193288:userpool/eu-west-2_8OApL2Ydd'
    },
    swagger: {
        file: 'tmp/swagger_full_.yaml',
        domain: {
            domainName: 'h-o.dev',
            subdomain: 'api-explorer',
            certificateArn: 'arn:aws:acm:us-east-1:981237193288:certificate/ff4bd794-01eb-4a5a-8e16-c8d3151845da'
        }
    },
    domain: {
        domainName: 'api.h-o.dev',
        zoneName: 'api.h-o.dev.',
        hostedZoneId: 'Z087093236D67UXK26HG',
        certificateArn: 'arn:aws:acm:eu-west-2:981237193288:certificate/18671030-753d-4047-8e26-76794b69fa7b'
    }
});
new AlfInstancesStack(app, "AlfInstancesStackEuWest2", {
    environment: 'dev',
    env: {
        region: 'eu-west-2',
        account: '609841182532'
    },
    createInstances: {
        imageId: 'ami-0cb790308f7591fa6'
    },
    // cognito
    swagger: {
        file: 'tmp/swagger_full.yaml',
    },
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUFpRjtBQUNqRiwwQ0FBMkM7QUFDM0MsbURBQXdEO0FBQ3hELHFEQUFrRDtBQUNsRCx1REFBb0Q7QUFDcEQsbUVBQWdFO0FBd0JoRSxNQUFhLGlCQUFrQixTQUFRLFlBQUs7SUFDMUMsWUFBWSxHQUFRLEVBQUUsRUFBVSxFQUFFLEtBQThCO1FBQzlELEtBQUssQ0FBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRXRCLE1BQU0sT0FBTyxHQUFHLElBQUksNkJBQWEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFL0MsSUFBSSwyQkFBWSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUVoQyxJQUFJLDZCQUFhLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUV4QyxNQUFNLGFBQWEsR0FBRyxJQUFJLHlDQUFtQixDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztRQUU3RCxPQUFPLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxtQkFBbUIsRUFBRSxhQUFhLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDM0csT0FBTyxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsbUJBQW1CLEVBQUUsYUFBYSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBRTFHLDBDQUEwQztRQUMxQyxNQUFNLFFBQVEsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNuRCxTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPO1lBQ3JDLGFBQWEsRUFBRSxvQkFBYSxDQUFDLE9BQU87WUFDcEMsWUFBWSxFQUFFLHFCQUFxQixHQUFHLElBQUksQ0FBQyxTQUFTO1NBQ3JELENBQUMsQ0FBQztRQUVILE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtRQUV2RCxJQUFJLGdCQUFTLENBQUMsSUFBSSxFQUFFLGNBQWMsRUFBRTtZQUNsQyxLQUFLLEVBQUUsUUFBUSxDQUFDLFlBQVk7U0FDN0IsQ0FBQyxDQUFDO1FBRUgsSUFBSSxnQkFBUyxDQUFDLElBQUksRUFBRSxvQkFBb0IsRUFBRTtZQUN4QyxLQUFLLEVBQUUsUUFBUSxDQUFDLGFBQWE7U0FDOUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBaENELDhDQWdDQztBQUVELE1BQU0sR0FBRyxHQUFHLElBQUksVUFBRyxFQUFFLENBQUM7QUFFdEIsSUFBSSxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsOEJBQThCLEVBQUU7SUFDdkQsV0FBVyxFQUFFLE1BQU07SUFDbkIsR0FBRyxFQUFFO1FBQ0gsTUFBTSxFQUFFLFdBQVc7UUFDbkIsT0FBTyxFQUFFLGNBQWM7S0FDeEI7SUFDRCw4QkFBOEI7SUFDOUIscUJBQXFCO0lBQ3JCLHFDQUFxQztJQUNyQyxLQUFLO0lBQ0wsT0FBTyxFQUFFO1FBQ1AsV0FBVyxFQUFFLHlFQUF5RTtLQUN2RjtJQUNELE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRSx3QkFBd0I7UUFDOUIsTUFBTSxFQUFFO1lBQ04sVUFBVSxFQUFFLFNBQVM7WUFDckIsU0FBUyxFQUFFLGNBQWM7WUFDekIsY0FBYyxFQUFFLHFGQUFxRjtTQUN0RztLQUNGO0lBQ0QsTUFBTSxFQUFFO1FBQ04sVUFBVSxFQUFFLGFBQWE7UUFDekIsUUFBUSxFQUFFLGNBQWM7UUFDeEIsWUFBWSxFQUFFLHNCQUFzQjtRQUNwQyxjQUFjLEVBQUUscUZBQXFGO0tBQ3RHO0NBQ0YsQ0FBQyxDQUFDO0FBRUwsSUFBSSxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLEVBQUU7SUFDckQsV0FBVyxFQUFFLEtBQUs7SUFDbEIsR0FBRyxFQUFFO1FBQ0gsTUFBTSxFQUFFLFdBQVc7UUFDbkIsT0FBTyxFQUFFLGNBQWM7S0FDeEI7SUFDRCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsdUJBQXVCO0tBQ2pDO0lBQ0QsVUFBVTtJQUNWLE9BQU8sRUFBRTtRQUNQLElBQUksRUFBRSx1QkFBdUI7S0FJOUI7Q0FPRixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFja1Byb3BzLCBTdGFjaywgQXBwLCBSZW1vdmFsUG9saWN5LCBDZm5PdXRwdXQgfSBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCBsb2dzID0gcmVxdWlyZSgnQGF3cy1jZGsvYXdzLWxvZ3MnKTtcbmltcG9ydCB7IEFsZkNka1Jlc3RBcGksIERvbWFpbiB9IGZyb20gJy4vQWxmQ2RrUmVzdEFwaSc7XG5pbXBvcnQgeyBBbGZDZGtUYWJsZXMgfSBmcm9tICcuL2xpYi9BbGZDZGtUYWJsZXMnO1xuaW1wb3J0IHsgQWxmQ2RrTGFtYmRhcyB9IGZyb20gJy4vbGliL0FsZkNka0xhbWJkYXMnO1xuaW1wb3J0IHsgQWxmQ2RrU3RlcEZ1bmN0aW9ucyB9IGZyb20gJy4vbGliL0FsZkNka1N0ZXBGdW5jdGlvbnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFsZkluc3RhbmNlc1N0YWNrUHJvcHMgZXh0ZW5kcyBTdGFja1Byb3BzIHtcbiAgLyoqXG4gICAqIGlmIHVuZGVmaW5lZCBubyBlYzIgaW5zdGFuY2VzIHdpbGwgYmUgY3JlYXRlZFxuICAgKi9cbiAgY3JlYXRlSW5zdGFuY2VzPzoge1xuICAgIGltYWdlSWQ6IHN0cmluZ1xuICB9LFxuICBzd2FnZ2VyPzoge1xuICAgIGZpbGU6IHN0cmluZyxcbiAgICBkb21haW4/OiB7XG4gICAgICBkb21haW5OYW1lOiBzdHJpbmcsXG4gICAgICBzdWJkb21haW46IHN0cmluZyxcbiAgICAgIGNlcnRpZmljYXRlQXJuOiBzdHJpbmdcbiAgICB9XG4gIH1cbiAgY29nbml0bz86IHtcbiAgICB1c2VyUG9vbEFybj86IHN0cmluZ1xuICB9LFxuICBlbnZpcm9ubWVudDogc3RyaW5nXG4gIGRvbWFpbj86IERvbWFpblxufVxuXG5leHBvcnQgY2xhc3MgQWxmSW5zdGFuY2VzU3RhY2sgZXh0ZW5kcyBTdGFjayB7XG4gIGNvbnN0cnVjdG9yKGFwcDogQXBwLCBpZDogc3RyaW5nLCBwcm9wcz86IEFsZkluc3RhbmNlc1N0YWNrUHJvcHMpIHtcbiAgICBzdXBlcihhcHAsIGlkLCBwcm9wcyk7XG5cbiAgICBjb25zdCBsYW1iZGFzID0gbmV3IEFsZkNka0xhbWJkYXModGhpcywgcHJvcHMpO1xuXG4gICAgbmV3IEFsZkNka1RhYmxlcyh0aGlzLCBsYW1iZGFzKTtcblxuICAgIG5ldyBBbGZDZGtSZXN0QXBpKHRoaXMsIGxhbWJkYXMsIHByb3BzKTtcblxuICAgIGNvbnN0IHN0ZXBGdW5jdGlvbnMgPSBuZXcgQWxmQ2RrU3RlcEZ1bmN0aW9ucyh0aGlzLCBsYW1iZGFzKTtcblxuICAgIGxhbWJkYXMuY3JlYXRlT25lQXBpLmFkZEVudmlyb25tZW50KCdTVEFURV9NQUNISU5FX0FSTicsIHN0ZXBGdW5jdGlvbnMuY3JlYXRlU3RhdGVNYWNoaW5lLnN0YXRlTWFjaGluZUFybik7XG4gICAgbGFtYmRhcy51cGRhdGVPbmVBcGkuYWRkRW52aXJvbm1lbnQoJ1NUQVRFX01BQ0hJTkVfQVJOJywgc3RlcEZ1bmN0aW9ucy51cGRhdGVTdGF0ZU1hY2hpbmUuc3RhdGVNYWNoaW5lQXJuKVxuXG4gICAgLy8gQ29uZmlndXJlIGxvZyBncm91cCBmb3Igc2hvcnQgcmV0ZW50aW9uXG4gICAgY29uc3QgbG9nR3JvdXAgPSBuZXcgbG9ncy5Mb2dHcm91cCh0aGlzLCAnTG9nR3JvdXAnLCB7XG4gICAgICByZXRlbnRpb246IGxvZ3MuUmV0ZW50aW9uRGF5cy5PTkVfREFZLFxuICAgICAgcmVtb3ZhbFBvbGljeTogUmVtb3ZhbFBvbGljeS5ERVNUUk9ZLFxuICAgICAgbG9nR3JvdXBOYW1lOiAnL2F3cy9sYW1iZGEvY3VzdG9tLycgKyB0aGlzLnN0YWNrTmFtZVxuICAgIH0pO1xuXG4gICAgY29uc3QgbGdzdHJlYW0gPSBsb2dHcm91cC5hZGRTdHJlYW0oJ215bG9nZ3JvdXBTdHJlYW0nKVxuXG4gICAgbmV3IENmbk91dHB1dCh0aGlzLCAnTG9nR3JvdXBOYW1lJywge1xuICAgICAgdmFsdWU6IGxvZ0dyb3VwLmxvZ0dyb3VwTmFtZVxuICAgIH0pO1xuXG4gICAgbmV3IENmbk91dHB1dCh0aGlzLCAnTG9nR3JvdXBTdHJlYW1OYW1lJywge1xuICAgICAgdmFsdWU6IGxnc3RyZWFtLmxvZ1N0cmVhbU5hbWVcbiAgICB9KTtcbiAgfVxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5cbm5ldyBBbGZJbnN0YW5jZXNTdGFjayhhcHAsIFwiQWxmSW5zdGFuY2VzU3RhY2tFdVdlc3QyUHJvZFwiLCB7XG4gICAgZW52aXJvbm1lbnQ6ICdwcm9kJyxcbiAgICBlbnY6IHtcbiAgICAgIHJlZ2lvbjogXCJldS13ZXN0LTJcIixcbiAgICAgIGFjY291bnQ6ICc5ODEyMzcxOTMyODgnXG4gICAgfSxcbiAgICAvLyBkaXNhYmxlIGNyZWF0ZSBlYzIgaW5zdGFuY2VcbiAgICAvLyBjcmVhdGVJbnN0YW5jZXM6IHtcbiAgICAvLyAgIGltYWdlSWQ6ICdhbWktMDRkNWNjOWI4OGY5ZDFkMzknXG4gICAgLy8gfSxcbiAgICBjb2duaXRvOiB7XG4gICAgICB1c2VyUG9vbEFybjogJ2Fybjphd3M6Y29nbml0by1pZHA6ZXUtd2VzdC0yOjk4MTIzNzE5MzI4ODp1c2VycG9vbC9ldS13ZXN0LTJfOE9BcEwyWWRkJ1xuICAgIH0sXG4gICAgc3dhZ2dlcjoge1xuICAgICAgZmlsZTogJ3RtcC9zd2FnZ2VyX2Z1bGxfLnlhbWwnLFxuICAgICAgZG9tYWluOiB7XG4gICAgICAgIGRvbWFpbk5hbWU6ICdoLW8uZGV2JyxcbiAgICAgICAgc3ViZG9tYWluOiAnYXBpLWV4cGxvcmVyJyxcbiAgICAgICAgY2VydGlmaWNhdGVBcm46ICdhcm46YXdzOmFjbTp1cy1lYXN0LTE6OTgxMjM3MTkzMjg4OmNlcnRpZmljYXRlL2ZmNGJkNzk0LTAxZWItNGE1YS04ZTE2LWM4ZDMxNTE4NDVkYSdcbiAgICAgIH1cbiAgICB9LFxuICAgIGRvbWFpbjoge1xuICAgICAgZG9tYWluTmFtZTogJ2FwaS5oLW8uZGV2JyxcbiAgICAgIHpvbmVOYW1lOiAnYXBpLmgtby5kZXYuJyxcbiAgICAgIGhvc3RlZFpvbmVJZDogJ1owODcwOTMyMzZENjdVWEsyNkhHJyxcbiAgICAgIGNlcnRpZmljYXRlQXJuOiAnYXJuOmF3czphY206ZXUtd2VzdC0yOjk4MTIzNzE5MzI4ODpjZXJ0aWZpY2F0ZS8xODY3MTAzMC03NTNkLTQwNDctOGUyNi03Njc5NGI2OWZhN2InXG4gICAgfVxuICB9KTtcblxubmV3IEFsZkluc3RhbmNlc1N0YWNrKGFwcCwgXCJBbGZJbnN0YW5jZXNTdGFja0V1V2VzdDJcIiwge1xuICBlbnZpcm9ubWVudDogJ2RldicsXG4gIGVudjoge1xuICAgIHJlZ2lvbjogJ2V1LXdlc3QtMicsXG4gICAgYWNjb3VudDogJzYwOTg0MTE4MjUzMidcbiAgfSxcbiAgY3JlYXRlSW5zdGFuY2VzOiB7XG4gICAgaW1hZ2VJZDogJ2FtaS0wY2I3OTAzMDhmNzU5MWZhNidcbiAgfSxcbiAgLy8gY29nbml0b1xuICBzd2FnZ2VyOiB7XG4gICAgZmlsZTogJ3RtcC9zd2FnZ2VyX2Z1bGwueWFtbCcsXG4gICAgLy8gZG9tYWluOiAnaC1vLmRldicsXG4gICAgLy8gc3ViZG9tYWluOiAnYXBpLWV4cGxvcmVyJyxcbiAgICAvLyBjZXJ0aWZpY2F0ZUFybjogJ2Fybjphd3M6YWNtOnVzLWVhc3QtMTo2MDk4NDExODI1MzI6Y2VydGlmaWNhdGUvZjI5OWI3NWItZjIyYy00MDRkLTk4ZjItODk1MjlmNGQyYzk2J1xuICB9LFxuICAvLyBkb21haW46IHtcbiAgLy8gICBkb21haW5OYW1lOiAnYXBpLmgtby5kZXYnLFxuICAvLyAgIHpvbmVOYW1lOiAnYXBpLmgtby5kZXYuJyxcbiAgLy8gICBob3N0ZWRab25lSWQ6ICdaMDE0ODY1MjFaODEzRU1TS05XTkgnLFxuICAvLyAgIGNlcnRpZmljYXRlQXJuOiAnYXJuOmF3czphY206ZXUtd2VzdC0yOjYwOTg0MTE4MjUzMjpjZXJ0aWZpY2F0ZS84NjE2ZTRlMy04NTcwLTQyZGItOWNiZC02ZTZlNzZkYTNjNWYnXG4gIC8vIH1cbn0pO1xuXG5hcHAuc3ludGgoKTtcbiJdfQ==