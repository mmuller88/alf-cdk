---
parameters:
  alfUserIdParam:
    in: query
    name: alfUserId
    description: Get all expected alf instances with that alfUserId
    required: false
    type: string
  alfInstanceIdParam:
    in: path
    name: alfInstanceId
    description: Get alfInstanceId item
    required: true
    type: string
paths:
  /instances:
    get:
      parameters:
        - $ref: '#/parameters/alfUserIdParam'
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/components/schemas/InstanceList'
        401:
          description: Authorization information is missing or invalid
  /items:
    get:
      parameters:
        - $ref: '#/parameters/alfUserIdParam'
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        200:
          description: Ok
        401:
          description: Authorization information is missing or invalid
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlfInstanceBody"
        required: true
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        201:
          description: Alf instance creation initiated
        400:
          description: Bad request. Alf Type be an integer and bigger than 0 and smaller than 1000.
        401:
          description: Authorization information is missing or invalid.
    options:
      consumes:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /items/{alfInstanceId}:
    get:
      parameters:
        # Required because DynamoDB needs Primary + Sort Key for finding the item
        - in: query
          name: alfUserId
          description: Get all expected alf instances with that alfUserId
          required: true
          type: string
        - $ref: '#/parameters/alfInstanceIdParam'
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        204:
          description: Ok
          schema:
            $ref: '#/components/schemas/InstanceItem'
        400:
          description: Bad request. alfInstanceId or alfUserId is invalid
        401:
          description: Authorization information is missing or invalid.
        404:
          description: Item with alfInstanceId doesn't exist or alfInstanceId doesn't belong to alfUserId
    delete:
      parameters:
        - $ref: '#/parameters/alfUserIdParam'
        - $ref: '#/parameters/alfInstanceIdParam'
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        204:
          description: Ok
        400:
          description: Bad request. alfInstanceId or alfUserId is invalid
        401:
          description: Authorization information is missing or invalid.
        404:
          description: Item with alfInstanceId doesn't exist or alfInstanceId doesn't belong to alfUserId
    options:
      consumes:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
    put:
      requestBody:
        content:
          application/json:
            description: Body for Alf Instance Update
            schema:
              $ref: "#/components/schemas/AlfInstanceBody"
        required: true
      parameters:
        - $ref: '#/parameters/alfInstanceIdParam'
      x-amazon-apigateway-request-validator: "Validator"
      responses:
        201:
          description: Alf instance creation initiated
        400:
          description: Bad request. Alf Type be an integer and bigger than 0 and smaller than 1000.
        401:
          description: Authorization information is missing or invalid.
        404:
          description: Item with alfInstanceId doesn't exist or alfInstanceId doesn't belong to alfUserId
components:
  schemas:
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/Instance'
    InstanceItem:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/expectedStatus'
    InstanceItemList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceItem'
    InstanceItem:
      type: object
      required:
        - expectedStatus
        - alfType
        - alfUserId
        - alfInstanceId
      properties:
        expectedStatus:
          $ref: '#/components/schemas/expectedStatus'
        alfType:
          $ref: '#/components/schemas/alfType'
        alfUserId:
          $ref: '#/components/schemas/alfUserId'
        alfInstanceId:
          $ref: '#/components/schemas/alfInstanceId'
    AlfInstanceBody:
      type: object
      required:
        - alfUserId
      properties:
        alfUserId:
          $ref: '#/components/schemas/alfUserId'
        expectedStatus:
          $ref: '#/components/schemas/expectedStatus'
        alfType:
          $ref: '#/components/schemas/alfType'
    alfUserId:
      type: string
    alfInstanceId:
      type: string
    expectedStatus:
      type: string
      enum:
        - running
        - hibernate
        - terminated
        - stopped
      default: running
    alfType:
      type: integer
      description: Type of the backend. Combination from EC2 Instance Type and Alfresco Deployment
      minimum: 1
      maximum: 999
      default: 1
x-amazon-apigateway-request-validators:
  Validator:
    validateRequestParameters: true
    validateRequestBody: true
