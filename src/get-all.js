"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_sdk_1 = require("aws-sdk");
const TABLE_NAME = process.env.TABLE_NAME || '';
const PRIMARY_KEY = process.env.PRIMARY_KEY || '';
const db = new aws_sdk_1.DynamoDB.DocumentClient();
const headers = {
    'Access-Control-Allow-Origin': '*'
};
exports.handler = async (event = {}) => {
    console.debug("get-all event: " + JSON.stringify(event));
    const queryStringParameters = event.queryStringParameters;
    try {
        var response;
        if (queryStringParameters && queryStringParameters[PRIMARY_KEY]) {
            response = await db.query({
                TableName: TABLE_NAME,
                KeyConditionExpression: '#alfUserId = :alfUserId',
                ExpressionAttributeNames: { '#alfUserId': 'alfUserId' },
                ExpressionAttributeValues: { ':alfUserId': queryStringParameters[PRIMARY_KEY] }
            }).promise();
        }
        else {
            response = await db.scan({
                TableName: TABLE_NAME,
            }).promise();
        }
        return { statusCode: 200, body: JSON.stringify(response.Items), headers: headers };
    }
    catch (dbError) {
        return { statusCode: 500, body: JSON.stringify(dbError), headers: headers };
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdldC1hbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBbUM7QUFDbkMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDO0FBQ2hELE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztBQUVsRCxNQUFNLEVBQUUsR0FBRyxJQUFJLGtCQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7QUFFekMsTUFBTSxPQUFPLEdBQUc7SUFDZCw2QkFBNkIsRUFBRSxHQUFHO0NBQ25DLENBQUE7QUFFWSxRQUFBLE9BQU8sR0FBRyxLQUFLLEVBQUUsUUFBYSxFQUFFLEVBQWdCLEVBQUU7SUFDN0QsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFFekQsTUFBTSxxQkFBcUIsR0FBRyxLQUFLLENBQUMscUJBQXFCLENBQUM7SUFFMUQsSUFBSTtRQUNGLElBQUksUUFBUSxDQUFDO1FBQ2IsSUFBRyxxQkFBcUIsSUFBSSxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsRUFBQztZQUM3RCxRQUFRLEdBQUcsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDO2dCQUN4QixTQUFTLEVBQUUsVUFBVTtnQkFDckIsc0JBQXNCLEVBQUUseUJBQXlCO2dCQUNqRCx3QkFBd0IsRUFBRSxFQUFDLFlBQVksRUFBRSxXQUFXLEVBQUM7Z0JBQ3JELHlCQUF5QixFQUFFLEVBQUUsWUFBWSxFQUFFLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxFQUFFO2FBQ2hGLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUVkO2FBQU07WUFDTCxRQUFRLEdBQUcsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDO2dCQUNyQixTQUFTLEVBQUUsVUFBVTthQUN0QixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDZjtRQUVGLE9BQU8sRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFDLENBQUM7S0FDbkY7SUFBQyxPQUFPLE9BQU8sRUFBRTtRQUNoQixPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7S0FDN0U7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbW9EQiB9IGZyb20gJ2F3cy1zZGsnO1xuY29uc3QgVEFCTEVfTkFNRSA9IHByb2Nlc3MuZW52LlRBQkxFX05BTUUgfHwgJyc7XG5jb25zdCBQUklNQVJZX0tFWSA9IHByb2Nlc3MuZW52LlBSSU1BUllfS0VZIHx8ICcnO1xuXG5jb25zdCBkYiA9IG5ldyBEeW5hbW9EQi5Eb2N1bWVudENsaWVudCgpO1xuXG5jb25zdCBoZWFkZXJzID0ge1xuICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonXG59XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVyID0gYXN5bmMgKGV2ZW50OiBhbnkgPSB7fSk6IFByb21pc2U8YW55PiA9PiB7XG4gIGNvbnNvbGUuZGVidWcoXCJnZXQtYWxsIGV2ZW50OiBcIiArIEpTT04uc3RyaW5naWZ5KGV2ZW50KSk7XG5cbiAgY29uc3QgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzID0gZXZlbnQucXVlcnlTdHJpbmdQYXJhbWV0ZXJzO1xuXG4gIHRyeSB7XG4gICAgdmFyIHJlc3BvbnNlO1xuICAgIGlmKHF1ZXJ5U3RyaW5nUGFyYW1ldGVycyAmJiBxdWVyeVN0cmluZ1BhcmFtZXRlcnNbUFJJTUFSWV9LRVldKXtcbiAgICAgIHJlc3BvbnNlID0gYXdhaXQgZGIucXVlcnkoe1xuICAgICAgICBUYWJsZU5hbWU6IFRBQkxFX05BTUUsXG4gICAgICAgIEtleUNvbmRpdGlvbkV4cHJlc3Npb246ICcjYWxmVXNlcklkID0gOmFsZlVzZXJJZCcsXG4gICAgICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVOYW1lczogeycjYWxmVXNlcklkJzogJ2FsZlVzZXJJZCd9LFxuICAgICAgICBFeHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7ICc6YWxmVXNlcklkJzogcXVlcnlTdHJpbmdQYXJhbWV0ZXJzW1BSSU1BUllfS0VZXSB9XG4gICAgICB9KS5wcm9taXNlKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgcmVzcG9uc2UgPSBhd2FpdCBkYi5zY2FuKHtcbiAgICAgICAgICBUYWJsZU5hbWU6IFRBQkxFX05BTUUsXG4gICAgICAgIH0pLnByb21pc2UoKTtcbiAgICAgfVxuXG4gICAgcmV0dXJuIHsgc3RhdHVzQ29kZTogMjAwLCBib2R5OiBKU09OLnN0cmluZ2lmeShyZXNwb25zZS5JdGVtcyksIGhlYWRlcnM6IGhlYWRlcnN9O1xuICB9IGNhdGNoIChkYkVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3RhdHVzQ29kZTogNTAwLCBib2R5OiBKU09OLnN0cmluZ2lmeShkYkVycm9yKSwgaGVhZGVyczogaGVhZGVycyB9O1xuICB9XG59O1xuIl19