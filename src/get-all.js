"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_sdk_1 = require("aws-sdk");
const TABLE_NAME = process.env.TABLE_NAME || '';
const PRIMARY_KEY = process.env.PRIMARY_KEY || '';
const db = new aws_sdk_1.DynamoDB.DocumentClient();
exports.handler = async (event = {}) => {
    console.debug("get-all event: " + JSON.stringify(event));
    const params = {
        TableName: TABLE_NAME,
    };
    const queryStringParameters = event.queryStringParameters;
    try {
        var response;
        if (queryStringParameters && queryStringParameters[PRIMARY_KEY]) {
            console.debug("params: " + JSON.stringify(params));
            response = await db.query({
                TableName: TABLE_NAME,
                KeyConditionExpression: '#alfUserId = :alfUserId',
                ExpressionAttributeNames: { '#alfUserId': 'alfUserId' },
                ExpressionAttributeValues: { ':alfUserId': queryStringParameters[PRIMARY_KEY] }
            }).promise();
        }
        else {
            response = await db.scan(params).promise();
        }
        return { statusCode: 200, body: JSON.stringify(response.Items) };
    }
    catch (dbError) {
        return { statusCode: 500, body: JSON.stringify(dbError) };
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdldC1hbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBbUM7QUFDbkMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDO0FBQ2hELE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztBQUVsRCxNQUFNLEVBQUUsR0FBRyxJQUFJLGtCQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7QUFFNUIsUUFBQSxPQUFPLEdBQUcsS0FBSyxFQUFFLFFBQWEsRUFBRSxFQUFnQixFQUFFO0lBQzdELE9BQU8sQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3pELE1BQU0sTUFBTSxHQUFHO1FBQ2IsU0FBUyxFQUFFLFVBQVU7S0FDdEIsQ0FBQztJQUVGLE1BQU0scUJBQXFCLEdBQUcsS0FBSyxDQUFDLHFCQUFxQixDQUFDO0lBRTFELElBQUk7UUFDRixJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUcscUJBQXFCLElBQUkscUJBQXFCLENBQUMsV0FBVyxDQUFDLEVBQUM7WUFFN0QsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ25ELFFBQVEsR0FBRyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUM7Z0JBQ3hCLFNBQVMsRUFBRSxVQUFVO2dCQUNyQixzQkFBc0IsRUFBRSx5QkFBeUI7Z0JBQ2pELHdCQUF3QixFQUFFLEVBQUMsWUFBWSxFQUFFLFdBQVcsRUFBQztnQkFDckQseUJBQXlCLEVBQUUsRUFBRSxZQUFZLEVBQUUscUJBQXFCLENBQUMsV0FBVyxDQUFDLEVBQUU7YUFDaEYsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBRWQ7YUFBTTtZQUNMLFFBQVEsR0FBRyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDM0M7UUFDRixPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztLQUNsRTtJQUFDLE9BQU8sT0FBTyxFQUFFO1FBQ2hCLE9BQU8sRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7S0FDM0Q7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbW9EQiB9IGZyb20gJ2F3cy1zZGsnO1xuY29uc3QgVEFCTEVfTkFNRSA9IHByb2Nlc3MuZW52LlRBQkxFX05BTUUgfHwgJyc7XG5jb25zdCBQUklNQVJZX0tFWSA9IHByb2Nlc3MuZW52LlBSSU1BUllfS0VZIHx8ICcnO1xuXG5jb25zdCBkYiA9IG5ldyBEeW5hbW9EQi5Eb2N1bWVudENsaWVudCgpO1xuXG5leHBvcnQgY29uc3QgaGFuZGxlciA9IGFzeW5jIChldmVudDogYW55ID0ge30pOiBQcm9taXNlPGFueT4gPT4ge1xuICBjb25zb2xlLmRlYnVnKFwiZ2V0LWFsbCBldmVudDogXCIgKyBKU09OLnN0cmluZ2lmeShldmVudCkpO1xuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgVGFibGVOYW1lOiBUQUJMRV9OQU1FLFxuICB9O1xuXG4gIGNvbnN0IHF1ZXJ5U3RyaW5nUGFyYW1ldGVycyA9IGV2ZW50LnF1ZXJ5U3RyaW5nUGFyYW1ldGVycztcblxuICB0cnkge1xuICAgIHZhciByZXNwb25zZTtcbiAgICBpZihxdWVyeVN0cmluZ1BhcmFtZXRlcnMgJiYgcXVlcnlTdHJpbmdQYXJhbWV0ZXJzW1BSSU1BUllfS0VZXSl7XG5cbiAgICAgIGNvbnNvbGUuZGVidWcoXCJwYXJhbXM6IFwiICsgSlNPTi5zdHJpbmdpZnkocGFyYW1zKSk7XG4gICAgICByZXNwb25zZSA9IGF3YWl0IGRiLnF1ZXJ5KHtcbiAgICAgICAgVGFibGVOYW1lOiBUQUJMRV9OQU1FLFxuICAgICAgICBLZXlDb25kaXRpb25FeHByZXNzaW9uOiAnI2FsZlVzZXJJZCA9IDphbGZVc2VySWQnLFxuICAgICAgICBFeHByZXNzaW9uQXR0cmlidXRlTmFtZXM6IHsnI2FsZlVzZXJJZCc6ICdhbGZVc2VySWQnfSxcbiAgICAgICAgRXhwcmVzc2lvbkF0dHJpYnV0ZVZhbHVlczogeyAnOmFsZlVzZXJJZCc6IHF1ZXJ5U3RyaW5nUGFyYW1ldGVyc1tQUklNQVJZX0tFWV0gfVxuICAgICAgfSkucHJvbWlzZSgpO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3BvbnNlID0gYXdhaXQgZGIuc2NhbihwYXJhbXMpLnByb21pc2UoKTtcbiAgICAgfVxuICAgIHJldHVybiB7IHN0YXR1c0NvZGU6IDIwMCwgYm9keTogSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuSXRlbXMpIH07XG4gIH0gY2F0Y2ggKGRiRXJyb3IpIHtcbiAgICByZXR1cm4geyBzdGF0dXNDb2RlOiA1MDAsIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRiRXJyb3IpIH07XG4gIH1cbn07XG4iXX0=