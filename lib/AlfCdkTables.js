"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_dynamodb_1 = require("@aws-cdk/aws-dynamodb");
const core_1 = require("@aws-cdk/core");
exports.instanceTable = { name: 'alfInstances', primaryKey: 'alfUserId', sortKey: 'alfInstanceId' };
exports.staticTable = { name: 'staticTable', primaryKey: 'itemsId' };
exports.repoTable = { name: 'repoTable', primaryKey: 'alfType' };
;
class AlfCdkTables {
    constructor(scope, lambdas) {
        this.dynamoInstanceTable = new aws_dynamodb_1.Table(scope, exports.instanceTable.name, {
            partitionKey: {
                name: exports.instanceTable.primaryKey,
                type: aws_dynamodb_1.AttributeType.STRING
            },
            sortKey: {
                name: exports.instanceTable.sortKey,
                type: aws_dynamodb_1.AttributeType.STRING
            },
            tableName: exports.instanceTable.name,
            removalPolicy: core_1.RemovalPolicy.DESTROY,
        });
        this.dynamoStaticTable = new aws_dynamodb_1.Table(scope, exports.staticTable.name, {
            partitionKey: {
                name: exports.staticTable.primaryKey,
                type: aws_dynamodb_1.AttributeType.STRING
            },
            tableName: exports.staticTable.name,
            removalPolicy: core_1.RemovalPolicy.DESTROY,
        });
        this.dynamoRepoTable = new aws_dynamodb_1.Table(scope, exports.repoTable.name, {
            partitionKey: {
                name: exports.repoTable.primaryKey,
                type: aws_dynamodb_1.AttributeType.NUMBER
            },
            tableName: exports.repoTable.name,
            removalPolicy: core_1.RemovalPolicy.DESTROY,
        });
        this.dynamoInstanceTable.grantFullAccess(lambdas.getAllLambda);
        this.dynamoInstanceTable.grantFullAccess(lambdas.getOneLambda);
        this.dynamoInstanceTable.grantFullAccess(lambdas.putOneItemLambda);
        this.dynamoInstanceTable.grantFullAccess(lambdas.deleteOne);
        this.dynamoInstanceTable.grantFullAccess(lambdas.checkCreationAllowanceLambda);
        this.dynamoRepoTable.grantFullAccess(lambdas.createInstanceLambda);
        new core_1.CfnOutput(scope, 'TableName', {
            value: this.dynamoInstanceTable.tableName
        });
        new core_1.CfnOutput(scope, 'RepoTableName', {
            value: this.dynamoRepoTable.tableName
        });
    }
}
exports.AlfCdkTables = AlfCdkTables;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxmQ2RrVGFibGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQWxmQ2RrVGFibGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0RBQTZEO0FBQzdELHdDQUFvRTtBQUd2RCxRQUFBLGFBQWEsR0FBRyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFDLENBQUM7QUFDM0YsUUFBQSxXQUFXLEdBQUcsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUMsQ0FBQTtBQUMzRCxRQUFBLFNBQVMsR0FBRyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBQyxDQUFBO0FBTW5FLENBQUM7QUFFRixNQUFhLFlBQVk7SUFLdkIsWUFBWSxLQUFnQixFQUFFLE9BQXNCO1FBQ2xELElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLG9CQUFLLENBQUMsS0FBSyxFQUFFLHFCQUFhLENBQUMsSUFBSSxFQUFFO1lBQzlELFlBQVksRUFBRTtnQkFDWixJQUFJLEVBQUUscUJBQWEsQ0FBQyxVQUFVO2dCQUM5QixJQUFJLEVBQUUsNEJBQWEsQ0FBQyxNQUFNO2FBQzNCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLElBQUksRUFBRSxxQkFBYSxDQUFDLE9BQU87Z0JBQzNCLElBQUksRUFBRSw0QkFBYSxDQUFDLE1BQU07YUFDM0I7WUFDRCxTQUFTLEVBQUUscUJBQWEsQ0FBQyxJQUFJO1lBQzdCLGFBQWEsRUFBRSxvQkFBYSxDQUFDLE9BQU87U0FDckMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksb0JBQUssQ0FBQyxLQUFLLEVBQUUsbUJBQVcsQ0FBQyxJQUFJLEVBQUU7WUFDMUQsWUFBWSxFQUFFO2dCQUNaLElBQUksRUFBRSxtQkFBVyxDQUFDLFVBQVU7Z0JBQzVCLElBQUksRUFBRSw0QkFBYSxDQUFDLE1BQU07YUFDM0I7WUFDRCxTQUFTLEVBQUUsbUJBQVcsQ0FBQyxJQUFJO1lBQzNCLGFBQWEsRUFBRSxvQkFBYSxDQUFDLE9BQU87U0FDckMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLG9CQUFLLENBQUMsS0FBSyxFQUFFLGlCQUFTLENBQUMsSUFBSSxFQUFFO1lBQ3RELFlBQVksRUFBRTtnQkFDWixJQUFJLEVBQUUsaUJBQVMsQ0FBQyxVQUFVO2dCQUMxQixJQUFJLEVBQUUsNEJBQWEsQ0FBQyxNQUFNO2FBQzNCO1lBQ0QsU0FBUyxFQUFFLGlCQUFTLENBQUMsSUFBSTtZQUN6QixhQUFhLEVBQUUsb0JBQWEsQ0FBQyxPQUFPO1NBQ3JDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDbkUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUMvRSxJQUFJLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUVuRSxJQUFJLGdCQUFTLENBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRTtZQUNoQyxLQUFLLEVBQUUsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFNBQVM7U0FDMUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxnQkFBUyxDQUFDLEtBQUssRUFBRSxlQUFlLEVBQUU7WUFDcEMsS0FBSyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUztTQUN0QyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFwREQsb0NBb0RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGFibGUsIEF0dHJpYnV0ZVR5cGUgfSBmcm9tICdAYXdzLWNkay9hd3MtZHluYW1vZGInO1xuaW1wb3J0IHsgQ29uc3RydWN0LCBSZW1vdmFsUG9saWN5LCBDZm5PdXRwdXQgfSBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCB7IEFsZkNka0xhbWJkYXMgfSBmcm9tICcuL0FsZkNka0xhbWJkYXMnO1xuXG5leHBvcnQgY29uc3QgaW5zdGFuY2VUYWJsZSA9IHsgbmFtZTogJ2FsZkluc3RhbmNlcycsIHByaW1hcnlLZXk6ICdhbGZVc2VySWQnLCBzb3J0S2V5OiAnYWxmSW5zdGFuY2VJZCd9O1xuZXhwb3J0IGNvbnN0IHN0YXRpY1RhYmxlID0geyBuYW1lOiAnc3RhdGljVGFibGUnLCBwcmltYXJ5S2V5OiAnaXRlbXNJZCd9XG5leHBvcnQgY29uc3QgcmVwb1RhYmxlID0geyBuYW1lOiAncmVwb1RhYmxlJywgcHJpbWFyeUtleTogJ2FsZlR5cGUnfVxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZkNka1RhYmxlc0ludGVyZmFjZSB7XG4gIHJlYWRvbmx5IGR5bmFtb0luc3RhbmNlVGFibGU6IFRhYmxlLFxuICByZWFkb25seSBkeW5hbW9TdGF0aWNUYWJsZTogVGFibGUsXG4gIHJlYWRvbmx5IGR5bmFtb1JlcG9UYWJsZTogVGFibGUsXG59O1xuXG5leHBvcnQgY2xhc3MgQWxmQ2RrVGFibGVzIGltcGxlbWVudHMgQWxmQ2RrVGFibGVzSW50ZXJmYWNle1xuICBkeW5hbW9JbnN0YW5jZVRhYmxlOiBUYWJsZTtcbiAgZHluYW1vU3RhdGljVGFibGU6IFRhYmxlO1xuICBkeW5hbW9SZXBvVGFibGU6IFRhYmxlO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGxhbWJkYXM6IEFsZkNka0xhbWJkYXMpe1xuICAgIHRoaXMuZHluYW1vSW5zdGFuY2VUYWJsZSA9IG5ldyBUYWJsZShzY29wZSwgaW5zdGFuY2VUYWJsZS5uYW1lLCB7XG4gICAgICBwYXJ0aXRpb25LZXk6IHtcbiAgICAgICAgbmFtZTogaW5zdGFuY2VUYWJsZS5wcmltYXJ5S2V5LFxuICAgICAgICB0eXBlOiBBdHRyaWJ1dGVUeXBlLlNUUklOR1xuICAgICAgfSxcbiAgICAgIHNvcnRLZXk6IHtcbiAgICAgICAgbmFtZTogaW5zdGFuY2VUYWJsZS5zb3J0S2V5LFxuICAgICAgICB0eXBlOiBBdHRyaWJ1dGVUeXBlLlNUUklOR1xuICAgICAgfSxcbiAgICAgIHRhYmxlTmFtZTogaW5zdGFuY2VUYWJsZS5uYW1lLFxuICAgICAgcmVtb3ZhbFBvbGljeTogUmVtb3ZhbFBvbGljeS5ERVNUUk9ZLCAvLyBOT1QgcmVjb21tZW5kZWQgZm9yIHByb2R1Y3Rpb24gY29kZVxuICAgIH0pO1xuXG4gICAgdGhpcy5keW5hbW9TdGF0aWNUYWJsZSA9IG5ldyBUYWJsZShzY29wZSwgc3RhdGljVGFibGUubmFtZSwge1xuICAgICAgcGFydGl0aW9uS2V5OiB7XG4gICAgICAgIG5hbWU6IHN0YXRpY1RhYmxlLnByaW1hcnlLZXksXG4gICAgICAgIHR5cGU6IEF0dHJpYnV0ZVR5cGUuU1RSSU5HXG4gICAgICB9LFxuICAgICAgdGFibGVOYW1lOiBzdGF0aWNUYWJsZS5uYW1lLFxuICAgICAgcmVtb3ZhbFBvbGljeTogUmVtb3ZhbFBvbGljeS5ERVNUUk9ZLCAvLyBOT1QgcmVjb21tZW5kZWQgZm9yIHByb2R1Y3Rpb24gY29kZVxuICAgIH0pO1xuXG4gICAgdGhpcy5keW5hbW9SZXBvVGFibGUgPSBuZXcgVGFibGUoc2NvcGUsIHJlcG9UYWJsZS5uYW1lLCB7XG4gICAgICBwYXJ0aXRpb25LZXk6IHtcbiAgICAgICAgbmFtZTogcmVwb1RhYmxlLnByaW1hcnlLZXksXG4gICAgICAgIHR5cGU6IEF0dHJpYnV0ZVR5cGUuTlVNQkVSXG4gICAgICB9LFxuICAgICAgdGFibGVOYW1lOiByZXBvVGFibGUubmFtZSxcbiAgICAgIHJlbW92YWxQb2xpY3k6IFJlbW92YWxQb2xpY3kuREVTVFJPWSwgLy8gTk9UIHJlY29tbWVuZGVkIGZvciBwcm9kdWN0aW9uIGNvZGVcbiAgICB9KTtcblxuICAgIHRoaXMuZHluYW1vSW5zdGFuY2VUYWJsZS5ncmFudEZ1bGxBY2Nlc3MobGFtYmRhcy5nZXRBbGxMYW1iZGEpO1xuICAgIHRoaXMuZHluYW1vSW5zdGFuY2VUYWJsZS5ncmFudEZ1bGxBY2Nlc3MobGFtYmRhcy5nZXRPbmVMYW1iZGEpO1xuICAgIHRoaXMuZHluYW1vSW5zdGFuY2VUYWJsZS5ncmFudEZ1bGxBY2Nlc3MobGFtYmRhcy5wdXRPbmVJdGVtTGFtYmRhKTtcbiAgICB0aGlzLmR5bmFtb0luc3RhbmNlVGFibGUuZ3JhbnRGdWxsQWNjZXNzKGxhbWJkYXMuZGVsZXRlT25lKTtcbiAgICB0aGlzLmR5bmFtb0luc3RhbmNlVGFibGUuZ3JhbnRGdWxsQWNjZXNzKGxhbWJkYXMuY2hlY2tDcmVhdGlvbkFsbG93YW5jZUxhbWJkYSk7XG4gICAgdGhpcy5keW5hbW9SZXBvVGFibGUuZ3JhbnRGdWxsQWNjZXNzKGxhbWJkYXMuY3JlYXRlSW5zdGFuY2VMYW1iZGEpO1xuXG4gICAgbmV3IENmbk91dHB1dChzY29wZSwgJ1RhYmxlTmFtZScsIHtcbiAgICAgIHZhbHVlOiB0aGlzLmR5bmFtb0luc3RhbmNlVGFibGUudGFibGVOYW1lXG4gICAgfSk7XG5cbiAgICBuZXcgQ2ZuT3V0cHV0KHNjb3BlLCAnUmVwb1RhYmxlTmFtZScsIHtcbiAgICAgIHZhbHVlOiB0aGlzLmR5bmFtb1JlcG9UYWJsZS50YWJsZU5hbWVcbiAgICB9KTtcbiAgfVxufVxuIl19